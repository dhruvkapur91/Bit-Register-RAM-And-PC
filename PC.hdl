// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

/*
| l | i | r | o/p |
  0   0	  0   oD 
  0   0	  1   false
  0   1	  0   oD + 1
  0   1	  1   x
  1   0	  0   in
  1   0	  1
  1   1	  0
  1   1	  1
*/

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Register(in = outCopy, load = true, out = outDelayed, out = out); // Could have used a DFF but it only works for a one bit and not 16-bit word.
    Inc16(in = outDelayed, out = incOutDelayed);
    Mux8Way16(a = outDelayed, b = false, c = incOutDelayed, d = outDelayed, e = in, f = outDelayed, g = outDelayed, h = outDelayed, sel[2] = load, sel[1] = inc, sel[0] = reset, out = outMux, out = outCopy);
}
